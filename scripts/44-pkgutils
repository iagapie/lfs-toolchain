name=pkgutils
version=5.40.7
source=(http://crux.nu/files/pkgutils-$version.tar.xz
        $PATCHDIR/pkgutils/ignore-conflict.patch
        $PATCHDIR/pkgutils/remove-libtool.patch
        $PATCHDIR/pkgutils/add-compress-infopages.patch
        $PATCHDIR/pkgutils/fix-build-needed-trigger.patch)

build() {
    cd $name-$version

    for p in ../*.patch; do
		patch -Np1 -i $p
	done

    make BINDIR=/tools/bin MANDIR=/tools/man ETCDIR=/tools/etc install
	sed -i 's,/etc/pkgmk.conf,/tools/etc/pkgmk.conf,' /tools/bin/pkgmk

    cat > /tools/etc/pkgmk.conf << "EOF"
#
# /etc/pkgmk.conf: pkgmk(8) configuration
#

export CFLAGS="-O2 -march=x86-64 -pipe"
export CXXFLAGS="${CFLAGS}"

export JOBS=$(nproc)
export MAKEFLAGS="-j $JOBS"

PKGMK_SOURCE_DIR="/var/lib/pkg/src"
PKGMK_PACKAGE_DIR="/var/lib/pkg/pkg"
PKGMK_WORK_DIR="/var/lib/pkg/work/$name"
PKGMK_DOWNLOAD="yes"
PKGMK_IGNORE_SIGNATURE="yes"
PKGMK_COMPRESSION_MODE="xz"

# End of file
EOF

    chmod 644 /tools/etc/pkgmk.conf

    cat > /tools/bin/pkgin << "EOF"
#!/bin/bash
#
# - a simple wrapper script for pkgmk
# - will build, install, upgrade and other operation without 'cd' into each port directory
# - port will be search automatically follow REPO order, port found first will be selected
# - does not solve dependency
#
# usage:
#    pkgin [port names] [pkgmk options]
#

trap "exit 1" SIGHUP SIGINT SIGQUIT SIGTERM

REPO="/usr/ports/core /usr/ports/extra /usr/ports/xorg /usr/ports/gnome"

while [ $1 ]; do
	case $1 in
		-*) PKGMK_CMD+=($1);;
		*) PKG+=($1);;
	esac
	shift
done

if [[ "${PKG[@]}" = "" ]]; then
	echo "Please provide port name to install."
	exit 1
fi

for p in ${PKG[@]}; do
	if pkginfo -i | awk '{print $1}' | grep -xq $p; then
		echo "Package '$p' is installed."
		continue
	fi
	PKGFOUND=no
	for r in $REPO; do
		if [ -f $r/$p/Pkgfile ]; then
			PKGFOUND=yes
			cd $r/$p &>/dev/null
			pkgmk ${PKGMK_CMD[@]} || exit $?
			[ -e bootstrap-post-install ] && sh bootstrap-post-install
			[ -e post-install ] && sh post-install
			cd - &>/dev/null
		fi
	done
	if [ "$PKGFOUND" = "no" ]; then
		echo "Port '$p' not found."
		exit 1
	fi
done

exit 0
EOF

    chmod +x /tools/bin/pkgin
}